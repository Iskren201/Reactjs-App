{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GitHub\\\\Reactjs-App\\\\reactjs-softuni-retake\\\\Front-end\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"../../hook/useForm\";\nimport React, { useState, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\"; // Използваме useNavigate за пренасочване\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginFormKeys = {\n  Email: 'email',\n  Password: 'password'\n};\nexport const Login = () => {\n  _s();\n  const navigate = useNavigate(); // За пренасочване\n  const {\n    onLoginSubmit\n  } = useContext(AuthContext);\n  const {\n    values,\n    changeHandler,\n    onSubmit\n  } = useForm({\n    [LoginFormKeys.Email]: '',\n    [LoginFormKeys.Password]: ''\n  }, onLoginSubmit);\n  const handleLogin = async () => {\n    // Проверка на потребителско име и парола\n    if (values[LoginFormKeys.Email] === userLogin.username && values[LoginFormKeys.Password] === userLogin.password) {\n      // Успешен вход\n      await onLoginSubmit(values); // Изпращаме данните на функцията за вход\n      navigate('/'); // Пренасочваме към началната страница\n    } else {\n      // Неуспешен вход - може да изведете съобщение за грешка\n      console.log(\"Невалидно потребителско име или парола\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      method: \"POST\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: values[LoginFormKeys.Email],\n        onChange: changeHandler,\n        type: \"email\",\n        placeholder: \"example@gmail.com\",\n        id: \"email\",\n        name: LoginFormKeys.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: values[LoginFormKeys.Password],\n        onChange: changeHandler,\n        type: \"password\",\n        placeholder: \"********\",\n        id: \"password\",\n        name: LoginFormKeys.Password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Already have an account? Login here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Back Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"jtG+CyLvP0LzuoMJ5gbOS/a8doc=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","React","useState","useContext","Link","useNavigate","jsxDEV","_jsxDEV","LoginFormKeys","Email","Password","Login","_s","navigate","onLoginSubmit","AuthContext","values","changeHandler","onSubmit","handleLogin","userLogin","username","password","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","method","htmlFor","value","onChange","type","placeholder","id","name","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/GitHub/Reactjs-App/reactjs-softuni-retake/Front-end/src/components/Login/Login.js"],"sourcesContent":["import { useForm } from \"../../hook/useForm\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\"; // Използваме useNavigate за пренасочване\r\n\r\nconst LoginFormKeys = {\r\n    Email: 'email',\r\n    Password: 'password',\r\n}\r\n\r\nexport const Login = () => {\r\n    const navigate = useNavigate(); // За пренасочване\r\n    const { onLoginSubmit } = useContext(AuthContext);\r\n    const { values, changeHandler, onSubmit } = useForm({\r\n        [LoginFormKeys.Email]: '',\r\n        [LoginFormKeys.Password]: '',\r\n    }, onLoginSubmit)\r\n\r\n    const handleLogin = async () => {\r\n        // Проверка на потребителско име и парола\r\n        if (values[LoginFormKeys.Email] === userLogin.username && values[LoginFormKeys.Password] === userLogin.password) {\r\n            // Успешен вход\r\n            await onLoginSubmit(values); // Изпращаме данните на функцията за вход\r\n            navigate('/'); // Пренасочваме към началната страница\r\n        } else {\r\n            // Неуспешен вход - може да изведете съобщение за грешка\r\n            console.log(\"Невалидно потребителско име или парола\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <h2>Login</h2>\r\n            <form className=\"login-form\" method=\"POST\" onSubmit={onSubmit}>\r\n                <label htmlFor=\"email\">email</label>\r\n                <input\r\n                    value={values[LoginFormKeys.Email]}\r\n                    onChange={changeHandler}\r\n                    type=\"email\"\r\n                    placeholder=\"example@gmail.com\"\r\n                    id=\"email\"\r\n                    name={LoginFormKeys.Email}\r\n                />\r\n                <label htmlFor=\"password\">password</label>\r\n                <input\r\n                    value={values[LoginFormKeys.Password]}\r\n                    onChange={changeHandler}\r\n                    type=\"password\"\r\n                    placeholder=\"********\"\r\n                    id=\"password\"\r\n                    name={LoginFormKeys.Password}\r\n                />\r\n                <button type=\"button\" onClick={handleLogin}>Log In</button> {/* Използваме onClick за обработка на вход */}\r\n            </form>\r\n            <button className=\"link-btn\">\r\n                <Link to=\"/register\">Already have an account? Login here.</Link>\r\n                <div>\r\n                    <Link to=\"/\">Go Back Home</Link>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGR,WAAW,EAAE,CAAC,CAAC;EAChC,MAAM;IAAES;EAAc,CAAC,GAAGX,UAAU,CAACY,WAAW,CAAC;EACjD,MAAM;IAAEC,MAAM;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAGlB,OAAO,CAAC;IAChD,CAACQ,aAAa,CAACC,KAAK,GAAG,EAAE;IACzB,CAACD,aAAa,CAACE,QAAQ,GAAG;EAC9B,CAAC,EAAEI,aAAa,CAAC;EAEjB,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,IAAIH,MAAM,CAACR,aAAa,CAACC,KAAK,CAAC,KAAKW,SAAS,CAACC,QAAQ,IAAIL,MAAM,CAACR,aAAa,CAACE,QAAQ,CAAC,KAAKU,SAAS,CAACE,QAAQ,EAAE;MAC7G;MACA,MAAMR,aAAa,CAACE,MAAM,CAAC,CAAC,CAAC;MAC7BH,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACH;MACAU,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACzD;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCnB,OAAA;MAAAmB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdvB,OAAA;MAAMkB,SAAS,EAAC,YAAY;MAACM,MAAM,EAAC,MAAM;MAACb,QAAQ,EAAEA,QAAS;MAAAQ,QAAA,gBAC1DnB,OAAA;QAAOyB,OAAO,EAAC,OAAO;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpCvB,OAAA;QACI0B,KAAK,EAAEjB,MAAM,CAACR,aAAa,CAACC,KAAK,CAAE;QACnCyB,QAAQ,EAAEjB,aAAc;QACxBkB,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,mBAAmB;QAC/BC,EAAE,EAAC,OAAO;QACVC,IAAI,EAAE9B,aAAa,CAACC;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5B,eACFvB,OAAA;QAAOyB,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC1CvB,OAAA;QACI0B,KAAK,EAAEjB,MAAM,CAACR,aAAa,CAACE,QAAQ,CAAE;QACtCwB,QAAQ,EAAEjB,aAAc;QACxBkB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,EAAE,EAAC,UAAU;QACbC,IAAI,EAAE9B,aAAa,CAACE;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/B,eACFvB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACI,OAAO,EAAEpB,WAAY;QAAAO,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzD,eACPvB,OAAA;MAAQkB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACxBnB,OAAA,CAACH,IAAI;QAACoC,EAAE,EAAC,WAAW;QAAAd,QAAA,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAChEvB,OAAA;QAAAmB,QAAA,eACInB,OAAA,CAACH,IAAI;UAACoC,EAAE,EAAC,GAAG;UAAAd,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEd,CAAC;AAAClB,EAAA,CApDWD,KAAK;EAAA,QACGN,WAAW,EAEgBL,OAAO;AAAA;AAAAyC,EAAA,GAH1C9B,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}