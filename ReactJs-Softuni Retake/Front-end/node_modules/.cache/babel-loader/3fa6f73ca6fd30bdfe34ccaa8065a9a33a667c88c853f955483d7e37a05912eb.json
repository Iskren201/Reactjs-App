{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Softuni-React-main\\\\Front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\nimport { Login } from \"./components/Login/Login\";\nimport { Register } from \"./components/Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cartIsShown, setCartIsShown] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n  // const [currentForm, setCurrentForm] = useState(\"login\");\n\n  // const toggleForm = (formName) => {\n  //   setCurrentForm(formName);\n  // };\n\n  const handleLogin = () => {\n    // Тук извършете вашата логика за логин\n    // Например, извикване на API, проверка на потребителско име и парола и др.\n    // А след това актуализирайте състоянието, ако логинът е успешен:\n    // setIsLoggedIn(true);\n    // За този пример, просто ще сме успешни, ако потребителят натисне бутона за логин\n    // setIsLoggedIn(true);\n  };\n  const handleRegister = () => {\n    // Логика за регистрация\n    // ...\n    // Ако регистрацията е успешна, може да промените стойността на showRegisterForm\n    setShowRegisterForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(CartProvider, {\n    children: [cartIsShown && /*#__PURE__*/_jsxDEV(Cart, {\n      onClose: hideCartHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onShowCart: showCartHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            isLoggedIn: isLoggedIn,\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eJPd+fAkyMzjfyy8wk8ZlgNY5T0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Routes","Route","Header","Meals","Cart","CartProvider","Login","Register","jsxDEV","_jsxDEV","App","_s","cartIsShown","setCartIsShown","isLoggedIn","setIsLoggedIn","showCartHandler","hideCartHandler","handleLogin","handleRegister","setShowRegisterForm","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","onShowCart","path","element","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Softuni-React-main/Front-end/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport { Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\nimport { Login } from \"./components/Login/Login\";\nimport { Register } from \"./components/Register/Register\";\n\nfunction App() {\n  const [cartIsShown, setCartIsShown] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n  // const [currentForm, setCurrentForm] = useState(\"login\");\n\n  // const toggleForm = (formName) => {\n  //   setCurrentForm(formName);\n  // };\n\n  const handleLogin = () => {\n    // Тук извършете вашата логика за логин\n    // Например, извикване на API, проверка на потребителско име и парола и др.\n    // А след това актуализирайте състоянието, ако логинът е успешен:\n    // setIsLoggedIn(true);\n    // За този пример, просто ще сме успешни, ако потребителят натисне бутона за логин\n    // setIsLoggedIn(true);\n  };\n\n  const handleRegister = () => {\n    // Логика за регистрация\n    // ...\n    // Ако регистрацията е успешна, може да промените стойността на showRegisterForm\n    setShowRegisterForm(false);\n  };\n\n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<Meals />} />\n          {/* Добавете пътя за страницата на логин и прехвърлете isLoggedIn като проп */}\n          <Route\n            path=\"/login\"\n            element={<Login isLoggedIn={isLoggedIn} onLogin={handleLogin} />}\n          />\n          {/* Добавете пътя за страницата на регистрация */}\n          <Route path=\"/register\" element={<Register />} />\n        </Routes>\n      </main>\n    </CartProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,QAAQ,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC5BH,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD;;EAEA;EACA;EACA;;EAEA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA;IACA;IACAC,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACEX,OAAA,CAACJ,YAAY;IAAAgB,QAAA,GACVT,WAAW,iBAAIH,OAAA,CAACL,IAAI;MAACkB,OAAO,EAAEL;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClDjB,OAAA,CAACP,MAAM;MAACyB,UAAU,EAAEX;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACvCjB,OAAA;MAAAY,QAAA,eACEZ,OAAA,CAACT,MAAM;QAAAqB,QAAA,gBACLZ,OAAA,CAACR,KAAK;UAAC2B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEpB,OAAA,CAACN,KAAK;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAEtCjB,OAAA,CAACR,KAAK;UACJ2B,IAAI,EAAC,QAAQ;UACbC,OAAO,eAAEpB,OAAA,CAACH,KAAK;YAACQ,UAAU,EAAEA,UAAW;YAACgB,OAAO,EAAEZ;UAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjE,eAEFjB,OAAA,CAACR,KAAK;UAAC2B,IAAI,EAAC,WAAW;UAACC,OAAO,eAAEpB,OAAA,CAACF,QAAQ;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC1C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAEnB;AAACf,EAAA,CAnDQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}