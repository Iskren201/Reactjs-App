{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Softuni-React-main\\\\Front-end\\\\src\\\\components\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export const Register = (props) => {\n//     const [email, setEmail] = useState('');\n//     const [pass, setPass] = useState('');\n//     const [name, setName] = useState('');\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         console.log(email);\n//     }\n\n//     return (\n//         <div className=\"auth-form-container\">\n//             <h2>Register</h2>\n//         <form className=\"register-form\" onSubmit={handleSubmit}>\n//             <label htmlFor=\"name\">Full name</label>\n//             <input value={name} name=\"name\" onChange={(e) => setName(e.target.value)} id=\"name\" placeholder=\"full Name\" />\n//             <label htmlFor=\"email\">email</label>\n//             <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\n//             <label htmlFor=\"password\">password</label>\n//             <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\n//             <button type=\"submit\">Log In</button>\n//         </form>\n//         <button className=\"link-btn\" onClick={() => props.onFormSwitch('login')}>Already have an account? Login here.</button>\n//     </div>\n//     )\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    email: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleRegister = () => {\n    // Изпращане на POST заявка към сървъра за регистрация\n    fetch(\"http://localhost:3030/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      if (response.ok) {\n        // Успешна регистрация - извършваме автоматичен логин\n        return fetch(\"http://localhost:3030/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: formData.username,\n            password: formData.password\n          })\n        });\n      } else {\n        // Обработка на грешка при регистрацията\n        throw new Error(\"Грешка при регистрацията\");\n      }\n    }).then(loginResponse => {\n      if (loginResponse.ok) {\n        // Успешен логин - можете да извършите необходимите действия след успешен логин\n        // Например, актуализирайте състоянието на приложението, за да покажете, че потребителят е влязъл в системата\n      } else {\n        // Обработка на грешка при логина\n        throw new Error(\"Грешка при логин след регистрация\");\n      }\n    }).catch(error => {\n      // Обработка на грешките\n      console.error(\"Грешка при регистрация и/или логин:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0441\\u043A\\u043E \\u0438\\u043C\\u0435:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0418\\u043C\\u0435\\u0439\\u043B:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRegister,\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"HwhVZrrytBGE8VNsparNFlU/HHE=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","password","email","handleChange","e","name","value","target","handleRegister","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","loginResponse","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Softuni-React-main/Front-end/src/components/Register/Register.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export const Register = (props) => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [pass, setPass] = useState('');\r\n//     const [name, setName] = useState('');\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         console.log(email);\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"auth-form-container\">\r\n//             <h2>Register</h2>\r\n//         <form className=\"register-form\" onSubmit={handleSubmit}>\r\n//             <label htmlFor=\"name\">Full name</label>\r\n//             <input value={name} name=\"name\" onChange={(e) => setName(e.target.value)} id=\"name\" placeholder=\"full Name\" />\r\n//             <label htmlFor=\"email\">email</label>\r\n//             <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\r\n//             <label htmlFor=\"password\">password</label>\r\n//             <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n//             <button type=\"submit\">Log In</button>\r\n//         </form>\r\n//         <button className=\"link-btn\" onClick={() => props.onFormSwitch('login')}>Already have an account? Login here.</button>\r\n//     </div>\r\n//     )\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    // Изпращане на POST заявка към сървъра за регистрация\r\n    fetch(\"http://localhost:3030/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          // Успешна регистрация - извършваме автоматичен логин\r\n          return fetch(\"http://localhost:3030/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              username: formData.username,\r\n              password: formData.password,\r\n            }),\r\n          });\r\n        } else {\r\n          // Обработка на грешка при регистрацията\r\n          throw new Error(\"Грешка при регистрацията\");\r\n        }\r\n      })\r\n      .then((loginResponse) => {\r\n        if (loginResponse.ok) {\r\n          // Успешен логин - можете да извършите необходимите действия след успешен логин\r\n          // Например, актуализирайте състоянието на приложението, за да покажете, че потребителят е влязъл в системата\r\n        } else {\r\n          // Обработка на грешка при логина\r\n          throw new Error(\"Грешка при логин след регистрация\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // Обработка на грешките\r\n        console.error(\"Грешка при регистрация и/или логин:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Регистрация</h2>\r\n      <form>\r\n        <label>\r\n          Потребителско име:\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Парола:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Имейл:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"button\" onClick={handleRegister}>\r\n          Регистрация\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}