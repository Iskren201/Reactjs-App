{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Softuni-React-main\\\\Front-end\\\\src\\\\components\\\\Layout\\\\Header.js\",\n  _s = $RefreshSig$();\n// import { Fragment } from 'react';\n\n// import HeaderCartButton from './HeaderCartButton';\n// import mealsImage from '../../assets/meals.jpg';\n// import classes from './Header.module.css';\n// import { Link } from 'react-router-dom';\n\n// const Header = (props) => {\n//   return (\n//     <Fragment>\n//       <header className={classes.header}>\n//         <h1>ReactMeals</h1>\n//         <HeaderCartButton onClick={props.onShowCart} />\n//       </header>\n//       <div className={classes['main-image']}>\n//         <img src={mealsImage} alt='A table full of delicious food!' />\n//       </div>\n\n//     </Fragment>\n//   );\n// };\n\n// export default Header;\n\nimport { Fragment, useState } from 'react';\nimport HeaderCartButton from './HeaderCartButton';\nimport mealsImage from '../../assets/meals.jpg';\nimport classes from './Header.module.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  _s();\n  // Създаваме състояние, което ще отразява дали потребителят е логнат\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Функция за логин\n  const loginHandler = () => {\n    // Тук може да добавите код за логин логиката си\n    // Например, извикване на API, проверка на потребителско име и парола и др.\n    // А след това актуализирайте състоянието, ако логинът е успешен:\n    // setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ReactMeals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0414\\u043E\\u0431\\u0440\\u0435 \\u0434\\u043E\\u0448\\u044A\\u043B, \\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0441\\u043A\\u043E \\u0418\\u043C\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loginHandler,\n        children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HeaderCartButton, {\n        onClick: props.onShowCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['main-image'],\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mealsImage,\n        alt: \"A table full of delicious food!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Fragment","useState","HeaderCartButton","mealsImage","classes","Link","jsxDEV","_jsxDEV","Header","props","_s","isLoggedIn","setIsLoggedIn","loginHandler","children","className","header","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onShowCart","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Softuni-React-main/Front-end/src/components/Layout/Header.js"],"sourcesContent":["// import { Fragment } from 'react';\n\n// import HeaderCartButton from './HeaderCartButton';\n// import mealsImage from '../../assets/meals.jpg';\n// import classes from './Header.module.css';\n// import { Link } from 'react-router-dom';\n\n// const Header = (props) => {\n//   return (\n//     <Fragment>\n//       <header className={classes.header}>\n//         <h1>ReactMeals</h1>\n//         <HeaderCartButton onClick={props.onShowCart} />\n//       </header>\n//       <div className={classes['main-image']}>\n//         <img src={mealsImage} alt='A table full of delicious food!' />\n//       </div>\n\n//     </Fragment>\n//   );\n// };\n\n// export default Header;\n\nimport { Fragment, useState } from 'react';\n\nimport HeaderCartButton from './HeaderCartButton';\nimport mealsImage from '../../assets/meals.jpg';\nimport classes from './Header.module.css';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  // Създаваме състояние, което ще отразява дали потребителят е логнат\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Функция за логин\n  const loginHandler = () => {\n    // Тук може да добавите код за логин логиката си\n    // Например, извикване на API, проверка на потребителско име и парола и др.\n    // А след това актуализирайте състоянието, ако логинът е успешен:\n    // setIsLoggedIn(true);\n  };\n\n  return (\n    <Fragment>\n      <header className={classes.header}>\n        <h1>ReactMeals</h1>\n        {/* Показваме или потребителското име или бутона за логин, в зависимост от логина */}\n        {isLoggedIn ? (\n          <p>Добре дошъл, Потребителско Име</p>\n        ) : (\n          <button onClick={loginHandler}>Логин</button>\n        )}\n        <HeaderCartButton onClick={props.onShowCart} />\n      </header>\n      <div className={classes['main-image']}>\n        <img src={mealsImage} alt='A table full of delicious food!' />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Header;\n\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAE1C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACA;EAAA,CACD;EAED,oBACEN,OAAA,CAACP,QAAQ;IAAAc,QAAA,gBACPP,OAAA;MAAQQ,SAAS,EAAEX,OAAO,CAACY,MAAO;MAAAF,QAAA,gBAChCP,OAAA;QAAAO,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EAElBT,UAAU,gBACTJ,OAAA;QAAAO,QAAA,EAAG;MAA8B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,gBAErCb,OAAA;QAAQc,OAAO,EAAER,YAAa;QAAAC,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrC,eACDb,OAAA,CAACL,gBAAgB;QAACmB,OAAO,EAAEZ,KAAK,CAACa;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC,eACTb,OAAA;MAAKQ,SAAS,EAAEX,OAAO,CAAC,YAAY,CAAE;MAAAU,QAAA,eACpCP,OAAA;QAAKgB,GAAG,EAAEpB,UAAW;QAACqB,GAAG,EAAC;MAAiC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEf,CAAC;AAACV,EAAA,CA7BIF,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}